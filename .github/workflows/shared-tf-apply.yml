name: üó∫Ô∏è shared-tf-apply
on:
  workflow_call:
    inputs:
      workspaces:
        type: string 
        description: 'workspaces keys in JSON format to be used for naming the workflow'
        required: true
      destroy-mode:
        type: boolean
        required: false
        default: false
      apply:
        type: boolean
        required: true
      enable-gh-environment:
        type: boolean
        required: false
        default: false

jobs:
  tf:
    name: ${{ matrix.workspace }} 
    runs-on: ubuntu-latest
    environment: ${{ inputs.enable-gh-environment && matrix.workspace || '' }} 
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJSON(inputs.workspaces) }}
    env:
      TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      TF_FOLDER: "terraform"
      TF_FILES_PATH: "configuration/${{ matrix.workspace }}"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: üó∫Ô∏è Terraform Plan
        uses: ./.github/actions/terraform-plan
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          terraform-folder: terraform
          terraform-vars-file: $TF_FILES_PATH.tfvars
          terraform-plan-file: "$TF_FOLDER/tfplan"
          backend-config: $TF_FILES_PATH.backend.tfvars
          destroy-mode: ${{ inputs.destroy-mode }}
          export-plan-as-json: true

      - name: üî• Terraform Apply
        uses: ./.github/actions/terraform-apply
        if: ${{ inputs.apply }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          terraform-folder: terraform
          terraform-plan-file: "$TF_FOLDER/tfplan"
          terraform-outputs-file: "$TF_FOLDER/outputs.json"
          backend-config: $TF_FILES_PATH.backend.tfvars

      - name: üèóÔ∏è Build a summary
        if: ${{ !inputs.destroy-mode }}
        uses: ohpensource/terraform-plan-summarize-gh-action/summarize@v0.1.3
        with:
          json-terraform-plan-file: ${{ env.TF_FOLDER }}/tfplan.json
          environment: ${{ matrix.workspace }}
          print-summary: false
          attach-markdown-summary: false
          attach-csv-summary: false
          attach-json-summary: true
